// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders like the last time (snapshots) 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <Connect(LogonComponent)>
    <LogonComponent
      currentSession={null}
      tryLogon={[Function]}
    >
      <div>
        <table>
          <tbody>
            <tr>
              <td>
                Username
              </td>
              <td>
                <input
                  id="username"
                  onChange={[Function]}
                  type="text"
                />
              </td>
            </tr>
            <tr>
              <td>
                Password
              </td>
              <td>
                <input
                  id="password"
                  onChange={[Function]}
                  type="password"
                />
              </td>
            </tr>
            <tr>
              <td
                colSpan={2}
              >
                <button
                  id="logonButton"
                  onClick={[Function]}
                >
                  Logon
                </button>
              </td>
            </tr>
            <tr>
              <td
                colSpan={2}
              >
                <span
                  id="logonMessage"
                >
                  "Not implemented"
                </span>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </LogonComponent>
  </Connect(LogonComponent)>
</Provider>
`;

exports[`renders like the last time (snapshots) 2`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <Connect(LogonComponent)>
    <LogonComponent
      currentSession={null}
      tryLogon={[Function]}
    >
      <div>
        <table>
          <tbody>
            <tr>
              <td>
                Username
              </td>
              <td>
                <input
                  id="username"
                  onChange={[Function]}
                  type="text"
                />
              </td>
            </tr>
            <tr>
              <td>
                Password
              </td>
              <td>
                <input
                  id="password"
                  onChange={[Function]}
                  type="password"
                />
              </td>
            </tr>
            <tr>
              <td
                colSpan={2}
              >
                <button
                  id="logonButton"
                  onClick={[Function]}
                >
                  Logon
                </button>
              </td>
            </tr>
            <tr>
              <td
                colSpan={2}
              >
                <span
                  id="logonMessage"
                >
                  "Not implemented"
                </span>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </LogonComponent>
  </Connect(LogonComponent)>
</Provider>
`;

exports[`renders like the last time (snapshots) 3`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <Connect(LogonComponent)>
    <LogonComponent
      currentSession={null}
      tryLogon={[Function]}
    >
      <div>
        <table>
          <tbody>
            <tr>
              <td>
                Username
              </td>
              <td>
                <input
                  id="username"
                  onChange={[Function]}
                  type="text"
                />
              </td>
            </tr>
            <tr>
              <td>
                Password
              </td>
              <td>
                <input
                  id="password"
                  onChange={[Function]}
                  type="password"
                />
              </td>
            </tr>
            <tr>
              <td
                colSpan={2}
              >
                <button
                  id="logonButton"
                  onClick={[Function]}
                >
                  Logon
                </button>
              </td>
            </tr>
            <tr>
              <td
                colSpan={2}
              >
                <span
                  id="logonMessage"
                >
                  "Not implemented"
                </span>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </LogonComponent>
  </Connect(LogonComponent)>
</Provider>
`;

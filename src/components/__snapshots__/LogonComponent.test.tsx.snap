// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders like the last time (snapshots) 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <Connect(LogonComponent)>
    <LogonComponent
      currentSession={null}
      tryLogon={[Function]}
    >
      <div
        className="form-signin"
      >
        <h1
          className="h3 mb-3 font-weight-normal"
        >
          Login
        </h1>
        <label
          className="sr-only"
          htmlFor="inputEmail"
        >
          Email address
        </label>
        <input
          autoFocus={true}
          className="form-control"
          id="username"
          onChange={[Function]}
          placeholder="Email address"
          required={true}
          type="text"
        />
        <label
          className="sr-only"
          htmlFor="inputPassword"
        >
          Password
        </label>
        <input
          className="form-control"
          id="password"
          onChange={[Function]}
          placeholder="Password"
          required={true}
          type="password"
        />
        <button
          className="btn btn-lg btn-primary btn-block"
          id="logonButton"
          onClick={[Function]}
        >
          Sign in
        </button>
        <label
          className="badge badge-danger"
        >
          Not logged in
        </label>
      </div>
    </LogonComponent>
  </Connect(LogonComponent)>
</Provider>
`;

exports[`renders like the last time (snapshots) 2`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <Connect(LogonComponent)>
    <LogonComponent
      currentSession={null}
      tryLogon={[Function]}
    >
      <div
        className="form-signin"
      >
        <h1
          className="h3 mb-3 font-weight-normal"
        >
          Login
        </h1>
        <label
          className="sr-only"
          htmlFor="inputEmail"
        >
          Email address
        </label>
        <input
          autoFocus={true}
          className="form-control"
          id="username"
          onChange={[Function]}
          placeholder="Email address"
          required={true}
          type="text"
        />
        <label
          className="sr-only"
          htmlFor="inputPassword"
        >
          Password
        </label>
        <input
          className="form-control"
          id="password"
          onChange={[Function]}
          placeholder="Password"
          required={true}
          type="password"
        />
        <button
          className="btn btn-lg btn-primary btn-block"
          id="logonButton"
          onClick={[Function]}
        >
          Sign in
        </button>
        <label
          className="badge badge-danger"
        >
          Not logged in
        </label>
      </div>
    </LogonComponent>
  </Connect(LogonComponent)>
</Provider>
`;

exports[`renders like the last time (snapshots) 3`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <Connect(LogonComponent)>
    <LogonComponent
      currentSession={null}
      tryLogon={[Function]}
    >
      <div
        className="form-signin"
      >
        <h1
          className="h3 mb-3 font-weight-normal"
        >
          Login
        </h1>
        <label
          className="sr-only"
          htmlFor="inputEmail"
        >
          Email address
        </label>
        <input
          autoFocus={true}
          className="form-control"
          id="username"
          onChange={[Function]}
          placeholder="Email address"
          required={true}
          type="text"
        />
        <label
          className="sr-only"
          htmlFor="inputPassword"
        >
          Password
        </label>
        <input
          className="form-control"
          id="password"
          onChange={[Function]}
          placeholder="Password"
          required={true}
          type="password"
        />
        <button
          className="btn btn-lg btn-primary btn-block"
          id="logonButton"
          onClick={[Function]}
        >
          Sign in
        </button>
        <label
          className="badge badge-danger"
        >
          Not logged in
        </label>
      </div>
    </LogonComponent>
  </Connect(LogonComponent)>
</Provider>
`;
